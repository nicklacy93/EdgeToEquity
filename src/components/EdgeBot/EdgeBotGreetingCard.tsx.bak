'use client';

import { motion } from 'framer-motion';

type Performance = {
  edgeScore: number;
  winRate: number;
};

const mockPerformance: Performance = {
  edgeScore: 2.4,
  winRate: 68
};

const getGreeting = (score: number) => {
  if (score >= 3.5) return { tone: "🔥 Crushing it today!", color: "text-emerald-400" };
  if (score >= 2.0) return { tone: "⚡ Solid edge forming", color: "text-blue-400" };
  return { tone: "🔧 Let's refactor and reset", color: "text-rose-400" };
};

const suggestions = [
  { emoji: '🧠', label: 'Refactor My Edge', desc: 'See what entries hurt my score' },
  { emoji: '📓', label: 'Journal Trades', desc: 'Reflect on emotional setups' },
  { emoji: '🎯', label: 'Focus Mode', desc: 'Block noise and lock in for 1 hour' },
];

export default function EdgeBotGreetingCard() {
  const { edgeScore, winRate } = mockPerformance;
  const greeting = getGreeting(edgeScore);

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className="relative overflow-hidden rounded-2xl border border-blue-500/30
                 bg-gradient-to-br from-slate-800/60 to-slate-900/40
                 backdrop-blur-md p-8 shadow-[0_0_32px_8px_rgba(59,130,246,0.15)]"
    >
      <div className="absolute inset-0 bg-gradient-to-r from-blue-600/10 to-cyan-600/10
                      opacity-50 animate-pulse" />

      <div className="relative z-10 flex items-center gap-4 mb-6">
        <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-cyan-500
                        rounded-full flex items-center justify-center text-2xl animate-pulse">
          🤖
        </div>
        <div>
          <h2 className={`text-2xl font-bold ${greeting.color}`}>{greeting.tone}</h2>
          <p className="text-blue-300 font-medium">
            EdgeScore: {edgeScore} · WinRate: {winRate}%
          </p>
        </div>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
        {suggestions.map((item, i) => (
          <motion.button
            key={i}
            whileHover={{ scale: 1.05 }}
            className="p-4 rounded-xl border border-slate-700 bg-slate-700/40
                       hover:border-blue-500/50 hover:bg-slate-700/70
                       text-left transition-all text-sm space-y-1"
          >
            <div className="text-xl">{item.emoji}</div>
            <div className="font-semibold text-white">{item.label}</div>
            <div className="text-slate-400 text-xs">{item.desc}</div>
          </motion.button>
        ))}
      </div>
    </motion.div>
  );
}
